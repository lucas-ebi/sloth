# =============================================================================
# PROJECT SPECIFIC
# =============================================================================

# Demo files
*.cif
enum_demo.py

# Project specific
demo*.cif
*_modified.cif
temp*.cif
test_output/
test.cif

# Export files generated by tests
exports/
exported_data.*
*.xml
*.pkl
*.yaml
*.yml
csv_files/
csv_output_dir/
*.txt

# Backup and debug files
*_backup.py
debug_*.py
fix_*.py
verify_*.py

# Analysis and sample files
*_analysis.py
*_analysis.json
sample_*

# Commented out files (keeping as-is)
# *.json
# handler.*

# Output directories
*_output/*

# Documentation files
PDBML_IMPLEMENTATION_ANALYSIS.md
COMPREHENSIVE_DICTIONARY_ANALYSIS.md
MAPPING_RULES_INTEGRATION_PLAN.md
ENUM_REFACTORING_SUMMARY.md
xml_mapping_generator.py

# =============================================================================
# PYTHON
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Python version management
.python-version

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# =============================================================================
# FRAMEWORKS & TOOLS
# =============================================================================

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageeMath parsed files
*.sage.py

# mkdocs documentation
/site

# =============================================================================
# TYPE CHECKERS & LINTERS
# =============================================================================

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# =============================================================================
# IDES & EDITORS
# =============================================================================

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# =============================================================================
# OPERATING SYSTEMS
# =============================================================================

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db